################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

#
# This file lists Karaf default settings for this particular version of Karaf.
# For easier maintenance when upgrading Karaf and to better document which
# default values have changed, it is recommended to place any changes to
# these values in a custom.properties file in the same folder as this file.
# Each value specified in custom.properties will override the default value
# here.
#

#
# Properties file inclusions (as a space separated list of relative paths)
# Included files will override the values specified in this file
# NB: ${includes} properties files are mandatory, it means that Karaf will not start
# if the include file is not found
#
${includes} = jre.properties custom.properties

#
# Properties file inclusions (as a space separated list of relative paths)
# Included files will override the values specified in this file
# NB: ${optionals} properties files are optionals, it means that Karaf will just
# display a warning message but the bootstrap will be performed
#
# ${optionals} = my.properties


#
# Framework selection properties
#
karaf.framework=felix

#
# Location of the OSGi frameworks
#
karaf.framework.felix=${karaf.default.repository}/org/apache/felix/org.apache.felix.framework/${felix.framework.version}/org.apache.felix.framework-${felix.framework.version}.jar

#
# Framework config properties.
#
org.osgi.framework.system.packages= \
 org.osgi.framework.startlevel;uses:="org.osgi.framework";version="1.0", \
 org.osgi.framework.wiring;uses:="org.osgi.resource,org.osgi.framework";version="1.1", \
 org.osgi.framework.hooks.bundle;uses:="org.osgi.framework";version="1.1", \
 org.osgi.framework.hooks.service;uses:="org.osgi.framework";version="1.1", \
 org.osgi.framework.hooks.resolver;uses:="org.osgi.framework.wiring";version="1.0", \
 org.osgi.framework.launch;uses:="org.osgi.framework";version="1.1", \
 org.osgi.framework.namespace;uses:="org.osgi.resource";version="1.0", \
 org.osgi.framework;version="1.7",\
 org.osgi.framework.hooks.weaving;uses:="org.osgi.framework.wiring";version="1.0",\
 org.osgi.resource;version="1.0",org.osgi.service.url;version="1.0",\
 org.osgi.service.startlevel;uses:="org.osgi.framework";version="1.1",\
 org.osgi.service.packageadmin;uses:="org.osgi.framework";version="1.2",\
 org.osgi.service.url;version="1.0", \
 org.osgi.util.tracker;uses:="org.osgi.framework";version="1.5.1", \
 org.apache.felix.framework.monitor;version="1.0", \
 org.apache.karaf.jaas.boot;version="${karaf.osgi.version}", \
 org.apache.karaf.jaas.boot.principal;version="${karaf.osgi.version}", \
 org.apache.karaf.version;version="${karaf.osgi.version}", \
 org.apache.xalan.extensions; version="${xalan.version}", \
 org.apache.xalan.xsltc.compiler; version="${xalan.version}", \
 org.apache.xalan.xsltc.cmdline.getopt; version="${xalan.version}", \
 org.apache.xalan.xsltc.util; version="${xalan.version}", \
 org.apache.xalan.transformer; version="${xalan.version}", \
 org.apache.xalan.xsltc.trax; version="${xalan.version}", \
 org.apache.xalan.processor; version="${xalan.version}", \
 org.apache.xalan.lib; version="${xalan.version}", \
 org.apache.xalan.trace; version="${xalan.version}", \
 org.apache.xalan.xsltc.compiler.util; version="${xalan.version}", \
 org.apache.xalan.templates; version="${xalan.version}", \
 org.apache.xalan.xsltc; version="${xalan.version}", \
 org.apache.xalan.xsltc.runtime; version="${xalan.version}", \
 org.apache.xalan; version="${xalan.version}", \
 org.apache.xalan.xslt; version="${xalan.version}", \
 org.apache.xalan.lib.sql; version="${xalan.version}", \
 org.apache.xalan.xsltc.runtime.output; version="${xalan.version}", \
 org.apache.xalan.xsltc.dom; version="${xalan.version}", \
 org.apache.xalan.client; version="${xalan.version}", \
 org.apache.xalan.xsltc.cmdline; version="${xalan.version}", \
 org.apache.xalan.serialize; version="${xalan.version}", \
 org.apache.xalan.res; version="${xalan.version}", \
 org.apache.xml.dtm.ref; version="${xalan.version}", \
 org.apache.xml.dtm; version="${xalan.version}", \
 org.apache.xml.dtm.ref.sax2dtm; version="${xalan.version}", \
 org.apache.xml.dtm.ref.dom2dtm; version="${xalan.version}", \
 org.apache.xml.res; version="${xalan.version}", \
 org.apache.xml.serializer.dom3; version="${xalan.version}", \
 org.apache.xml.serializer; version="${xalan.version}", \
 org.apache.xml.serializer.utils; version="${xalan.version}", \
 org.apache.xml.utils.res; version="${xalan.version}", \
 org.apache.xml.utils; version="${xalan.version}", \
 org.apache.xpath.functions; version="${xalan.version}", \
 org.apache.xpath.jaxp; version="${xalan.version}", \
 org.apache.xpath.patterns; version="${xalan.version}", \
 org.apache.xpath.objects; version="${xalan.version}", \
 org.apache.xpath.res; version="${xalan.version}", \
 org.apache.xpath; version="${xalan.version}", \
 org.apache.xpath.axes; version="${xalan.version}", \
 org.apache.xpath.compiler; version="${xalan.version}", \
 org.apache.xpath.operations; version="${xalan.version}", \
 org.apache.xpath.domapi; version="${xalan.version}", \
 org.apache.html.dom; version="${xerces.version}", \
 org.apache.wml.dom; version="${xerces.version}", \
 org.apache.wml; version="${xerces.version}", \
 org.apache.xerces.parsers; version="${xerces.version}", \
 org.apache.xerces.impl.dtd.models; version="${xerces.version}", \
 org.apache.xerces.xni.parser; version="${xerces.version}", \
 org.apache.xerces.impl.dv.xs; version="${xerces.version}", \
 org.apache.xerces.impl.xs.traversers; version="${xerces.version}", \
 org.apache.xerces.util; version="${xerces.version}", \
 org.apache.xerces.impl.dtd; version="${xerces.version}", \
 org.apache.xerces.jaxp.validation; version="${xerces.version}", \
 org.apache.xerces.dom3.as; version="${xerces.version}", \
 org.apache.xerces.impl.dv; version="${xerces.version}", \
 org.apache.xerces.jaxp; version="${xerces.version}", \
 org.apache.xerces.jaxp.datatype; version="${xerces.version}", \
 org.apache.xerces.impl.xpath.regex; version="${xerces.version}", \
 org.apache.xerces.xni; version="${xerces.version}", \
 org.apache.xerces.impl.msg; version="${xerces.version}", \
 org.apache.xerces.impl.dv.util; version="${xerces.version}", \
 org.apache.xerces.impl.xs.util; version="${xerces.version}", \
 org.apache.xerces.dom; version="${xerces.version}", \
 org.apache.xerces.dom.events; version="${xerces.version}", \
 org.apache.xerces.impl.xs.opti; version="${xerces.version}", \
 org.apache.xerces.impl; version="${xerces.version}", \
 org.apache.xerces.xs; version="${xerces.version}", \
 org.apache.xerces.impl.io; version="${xerces.version}", \
 org.apache.xerces.xpointer; version="${xerces.version}", \
 org.apache.xerces.impl.dv.dtd; version="${xerces.version}", \
 org.apache.xerces.xinclude; version="${xerces.version}", \
 org.apache.xerces.impl.xpath; version="${xerces.version}", \
 org.apache.xerces.xs.datatypes; version="${xerces.version}", \
 org.apache.xerces.impl.xs.identity; version="${xerces.version}", \
 org.apache.xerces.impl.xs.models; version="${xerces.version}", \
 org.apache.xerces.xni.grammars; version="${xerces.version}", \
 org.apache.xerces.impl.xs; version="${xerces.version}", \
 org.apache.xerces.impl.validation; version="${xerces.version}", \
 org.apache.xml.serialize; version="${xerces.version}", \
 ${jre-${java.specification.version}}

# Extra packages appended after standard packages
org.osgi.framework.system.packages.extra= org.apache.karaf.branding

org.osgi.framework.system.capabilities= \
 ${eecap-${java.specification.version}}, \
 service-reference;effective:=active;objectClass=org.osgi.service.packageadmin.PackageAdmin, \
 service-reference;effective:=active;objectClass=org.osgi.service.startlevel.StartLevel, \
 service-reference;effective:=active;objectClass=org.osgi.service.url.URLHandlers, \
 ${services-${karaf.framework}}

services-felix= \
 service-reference;effective:=active;objectClass=org.apache.felix.framework.monitor.MonitoringService


eecap-1.7= osgi.ee; osgi.ee="OSGi/Minimum"; version:List<Version>="1.0,1.1,1.2", \
 osgi.ee; osgi.ee="JavaSE"; version:List<Version>="1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7"
eecap-1.6= osgi.ee; osgi.ee="OSGi/Minimum"; version:List<Version>="1.0,1.1,1.2", \
 osgi.ee; osgi.ee="JavaSE"; version:List<Version>="1.0,1.1,1.2,1.3,1.4,1.5,1.6"
eecap-1.5= osgi.ee; osgi.ee="OSGi/Minimum"; version:List<Version>="1.0,1.1,1.2", \
 osgi.ee; osgi.ee="JavaSE"; version:List<Version>="1.0,1.1,1.2,1.3,1.4,1.5"
eecap-1.4= osgi.ee; osgi.ee="OSGi/Minimum"; version:List<Version>="1.0,1.1,1.2", \
 osgi.ee; osgi.ee="JavaSE"; version:List<Version>="1.0,1.1,1.2,1.3,1.4"
eecap-1.3= osgi.ee; osgi.ee="OSGi/Minimum"; version:List<Version>="1.0,1.1", \
 osgi.ee; osgi.ee="JavaSE"; version:List<Version>="1.0,1.1,1.2,1.3"
eecap-1.2= osgi.ee; osgi.ee="OSGi/Minimum"; version:List<Version>="1.0,1.1", \
 osgi.ee; osgi.ee="JavaSE"; version:List<Version>="1.0,1.1,1.2"

# javax.transaction is needed to avoid class loader constraint violation when using javax.sql  
org.osgi.framework.bootdelegation=org.apache.karaf.jaas.boot,sun.*,com.sun.*,javax.transaction,javax.transaction.*,org.apache.xalan.processor,org.apache.xpath.jaxp,org.apache.xml.dtm.ref,org.apache.xerces.jaxp.datatype,org.apache.xerces.stax,org.apache.xerces.parsers,org.apache.xerces.jaxp,org.apache.xerces.jaxp.validation,org.apache.xerces.dom

# OSGi Execution Environment
org.osgi.framework.executionenvironment=J2SE-1.7,JavaSE-1.7,J2SE-1.6,JavaSE-1.6,J2SE-1.5,JavaSE-1.5,J2SE-1.4,JavaSE-1.4,J2SE-1.3,JavaSE-1.3,J2SE-1.2,,JavaSE-1.2,CDC-1.1/Foundation-1.1,CDC-1.0/Foundation-1.0,J2ME,OSGi/Minimum-1.1,OSGi/Minimum-1.0

# Set the parent classloader for the bundle to the classloader that loads the Framework (i.e. everything in lib/*.jar)
org.osgi.framework.bundle.parent=framework

# To enable the use of the startup.properties file to control the start level:
karaf.auto.start=startup.properties

org.osgi.framework.startlevel.beginning=100
karaf.startlevel.bundle=60

karaf.shutdown.port.file=${karaf.data}/port

#
# FileMonitor properties
#
felix.fileinstall.dir    = ${karaf.base}/etc
felix.fileinstall.filter = .*\\.cfg
felix.fileinstall.poll   = 1000
felix.fileinstall.noInitialDelay = true
felix.fileinstall.log.level = 3

#
# Delay for writing the framework state to disk in equinox
# must be  >= 1000 and <= 1800000
#
eclipse.stateSaveDelayInterval = 1000

#
# OBR Repository list
# This property will be modified by the obr:addUrl and obr:removeUrl commands. 
#
obr.repository.url = 

#
# Delay showing the main console until fully initialized and display a progress bar
#
karaf.delay.console=true

#
# Turn on pseudo-synchronous mode for blueprint
#
org.apache.aries.blueprint.synchronous = true

